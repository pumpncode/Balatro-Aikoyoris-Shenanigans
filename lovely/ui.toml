[manifest]
version = "1.2"
dump_lua = true
priority = 0

[[patches]]
[patches.pattern]
target = "functions/state_events.lua"
pattern = """                            game_over = false
            end"""
position = "after"
payload = """
if G.GAME.current_round.advanced_blind then
    if G.GAME.aiko_puzzle_win then
        game_over = false
    else
        game_over = true
    end
elseif G.GAME.akyrs_mathematics_enabled and G.GAME.akyrs_character_stickers_enabled then
    if G.GAME.blind and AKYRS.is_value_within_threshold(G.GAME.blind.chips,G.GAME.chips,G.GAME.akyrs_math_threshold) then
        game_over = false
    else
        game_over = true
    end
end
"""
overwrite = true
match_indent = true


[[patches]]
[patches.pattern]
target = "game.lua"
pattern = """
            G.STATE = G.STATES.NEW_ROUND
"""
position = "after"
payload = """
"""
overwrite = true
match_indent = true

[[patches]]
[patches.pattern]
target = "game.lua"
pattern = """        G.STATE_COMPLETE = false
        return true
"""
position = "before"
payload = """
if G.GAME.current_round.advanced_blind and G.GAME.aiko_puzzle_win or G.GAME.current_round.hands_left < 1 then
    if G.GAME.aiko_puzzle_win or G.GAME.current_round.hands_left < 1 then
        G.STATE = G.STATES.NEW_ROUND
    else
        G.STATE = G.STATES.DRAW_TO_HAND
    end
elseif G.GAME.akyrs_mathematics_enabled and G.GAME.akyrs_character_stickers_enabled then
    if (G.GAME.blind and AKYRS.is_value_within_threshold(G.GAME.blind.chips,G.GAME.chips,G.GAME.akyrs_math_threshold)) or G.GAME.current_round.hands_left < 1 or AKYRS.does_hand_only_contain_symbols(G.hand) then
        G.STATE = G.STATES.NEW_ROUND
    else
        G.STATE = G.STATES.DRAW_TO_HAND
    end
end
"""
overwrite = true
match_indent = true

[[patches]]
[patches.pattern]
target = "functions/common_events.lua"
pattern = """                    table.insert(left_text, {n=G.UIT.O, config={w=1.2,h=1.2 , object = blind_sprite, hover = true, can_collide = false}})"""
position = "after"
payload = """
            if G.GAME.aiko_puzzle_win then
                table.insert(left_text,
                {n=G.UIT.C, config={padding = 0.05, align = 'cm', minw = 4}, nodes={
                    {n=G.UIT.R, config={align = 'cm'}, nodes={
                        {n=G.UIT.O, config={object = DynaText({string = {' '..localize('ph_puzzle_clear')..' '}, colours = {G.C.FILTER}, shadow = true, pop_in = 0, scale = 0.5*scale, silent = true})}}
                    }}
                }}) 
            else
"""
overwrite = true
match_indent = true
[[patches]]
[patches.pattern]
target = "functions/common_events.lua"
pattern = """                elseif string.find(config.name, 'tag') then
"""
position = "before"
payload = """
        end
"""
overwrite = true
match_indent = true


[[patches]]
[patches.pattern]
target = "functions/UI_definitions.lua"
pattern = """        {n=G.UIT.R, config={align = "cm",padding = 0.15}, nodes={"""
position = "at"
payload = """
        {n=G.UIT.R, config={align = "cm",padding = 0.15}, nodes = (G.GAME.current_round.advanced_blind) and SPECIAL_BOSSS_BLIND(G, stake_sprite) or {
"""
overwrite = true
match_indent = true

[[patches]]
[patches.pattern]
target = "functions/UI_definitions.lua"
pattern = """            {n=G.UIT.R, config={align = "cm",r = 0.1, padding = 0.05, minw = 3.1, colour = G.C.BLACK, emboss = 0.05}, nodes={"""
position = "at"
payload = """            {n=G.UIT.R, config={align = "cm",r = 0.1, padding = 0.05, minw = 3.1, colour = G.C.BLACK, emboss = 0.05}, nodes= (blind_choice.config.debuff.special_blind) and SPECIAL_BOSSS_BLIND_SELECT(G, stake_sprite, disabled,_reward,blind_choice) or {"""
overwrite = true
match_indent = true

[[patches]]
[patches.pattern]
target = "functions/UI_definitions.lua"
pattern = """        {n=G.UIT.O, config={object = blind_choice.animation}}
      }},
    }"""
position = "after"
payload = """if (G.GAME.current_round.advanced_blind) then
    score_tab = {
      {n=G.UIT.R, config={align = "cm", minh = 0.6}, nodes={
        {n=G.UIT.O, config={object = DynaText({string = {{string = getGameOverBlindText()}}, colours = {G.C.WHITE},shadow = true, float = true,maxw = 2.2, scale = 0.45})}}
      }},
      {n=G.UIT.R, config={align = "cm", padding = 0.1}, nodes={
        {n=G.UIT.O, config={object = blind_choice.animation}}
      }},
    }

end
"""
overwrite = true
match_indent = true



[[patches]]
[patches.pattern]
target = "functions/UI_definitions.lua"
pattern = """local stake_sprite = get_stake_sprite(G.GAME.stake or 1, 0.4)
    blind_text[#blind_text + 1] ="""
position = "after"
payload = """
        blind.debuff.special_blind and SPECIAL_BOSSS_BLIND_TOOLTIP(blind,ability_text,stake_sprite,_dollars) or 
"""
overwrite = true
match_indent = true



[[patches]]
[patches.pattern]
target = "engine/controller.lua"
pattern = """caps = self.held_keys["lshift"] or self.held_keys["rshift"]"""
position = "at"
payload = """
caps = AKYRS.shift_toggled or self.held_keys["lshift"] or self.held_keys["rshift"]
"""
overwrite = true
match_indent = true



[[patches]]
[patches.pattern]
target = "engine/node.lua"
pattern = """            love.graphics.setLineWidth(3)"""
position = "at"
payload = """
            love.graphics.setLineWidth(1)
"""
overwrite = true
match_indent = true



[[patches]]
[patches.pattern]
target = "functions/state_events.lua"
pattern = """        add_round_eval_row({dollars = 0, name='blind1', pitch = pitch, saved = true})"""
position = "before"
payload = """
    if G.GAME.akyrs_mathematics_enabled and G.GAME.akyrs_character_stickers_enabled then 
        add_round_eval_row({dollars = G.GAME.blind.dollars, name='blind1', pitch = pitch})
    else
"""
overwrite = true
match_indent = true



[[patches]]
[patches.pattern]
target = "functions/state_events.lua"
pattern = """        add_round_eval_row({dollars = 0, name='blind1', pitch = pitch, saved = true})"""
position = "after"
payload = """
    end
"""
overwrite = true
match_indent = true



[[patches]]
[patches.pattern]
target = "functions/UI_definitions.lua"
pattern = """    extras = create_UIBox_blind_tag(type, run_info)"""
position = "before"
payload = """
if not G.GAME.akyrs_no_skips then
"""
overwrite = true
match_indent = true


[[patches]]
[patches.pattern]
target = "functions/UI_definitions.lua"
pattern = """    extras = create_UIBox_blind_tag(type, run_info)"""
position = "after"
payload = """
end
"""
overwrite = true
match_indent = true

